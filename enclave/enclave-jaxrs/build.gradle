plugins {
  id "application"
}

application {
  mainClass = "com.quorum.tessera.enclave.rest.Main"
  mainModule = "tessera.enclave.jaxrs"
  applicationDefaultJvmArgs = [
    "-Dtessera.cli.type=ENCLAVE",
    "-Djnr.ffi.asm.enabled=false",
    "-Dlogback.configurationFile=/Users/mark/Projects/consensys/tessera/enclave/enclave-jaxrs/build/resources/main/logback-enclave.xml",
    "-Djakarta.xml.bind.JAXBContextFactory=org.eclipse.persistence.jaxb.JAXBContextFactory",
    "-Djakarta.xml.bind.context.factory=org.eclipse.persistence.jaxb.JAXBContextFactory",
    "--add-opens=org.glassfish.json.jaxrs/org.glassfish.json.jaxrs=org.glassfish.hk2.utilities"
  ]
  startScripts.enabled = true
}

configurations.all {
  exclude module: "jakarta.inject"
  exclude group: "jakarta.servlet"
  exclude group: "jakarta.json"
  exclude group: "jakarta.mail"
}

dependencies {

  implementation "info.picocli:picocli"
  implementation "jakarta.xml.bind:jakarta.xml.bind-api"

  implementation "org.slf4j:slf4j-api"
  runtimeOnly "org.slf4j:jul-to-slf4j"
  runtimeOnly "org.slf4j:jcl-over-slf4j"
  runtimeOnly "ch.qos.logback:logback-classic"
  runtimeOnly "ch.qos.logback:logback-core"

  implementation project(":config")
  implementation project(":shared")

  implementation project(":encryption:encryption-api")
  implementation project(":enclave:enclave-api")
  implementation project(":enclave:enclave-server")
  implementation "jakarta.ws.rs:jakarta.ws.rs-api"
  implementation "org.apache.commons:commons-lang3"

  implementation "org.glassfish:jakarta.json"
  implementation "com.fasterxml:classmate"

  implementation project(":tessera-jaxrs:jaxrs-client")
  implementation project(":tessera-context")

  implementation project(":server:server-api")
  implementation project(":cli:cli-api")

  testImplementation project(":server:jersey-server")
  implementation("org.eclipse.persistence:org.eclipse.persistence.moxy")
  runtimeOnly "org.glassfish.jersey.inject:jersey-hk2"
  implementation "org.glassfish.jersey.media:jersey-media-json-processing"
  runtimeOnly "org.glassfish.jersey.media:jersey-media-moxy"
  runtimeOnly "com.sun.mail:jakarta.mail"
  implementation "org.bouncycastle:bcprov-jdk15on"
  implementation "org.bouncycastle:bcpkix-jdk15on"
  implementation project(":server:jersey-server")


  testImplementation "org.glassfish.jersey.core:jersey-server"
  testImplementation "org.glassfish.jersey.test-framework:jersey-test-framework-core"
  testImplementation "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2"
  testImplementation("org.glassfish.jersey.inject:jersey-hk2")
  testImplementation "org.glassfish.jersey.media:jersey-media-json-processing"
  testImplementation "org.glassfish.jersey.media:jersey-media-moxy"

  testImplementation "jakarta.ws.rs:jakarta.ws.rs-api"

  runtimeOnly "org.glassfish.hk2:hk2-api"

  testImplementation "org.slf4j:jul-to-slf4j"

  testImplementation "com.sun.mail:jakarta.mail"
}

distZip {
  // exclude("**/asm-*.jar")
}
distTar {
  // exclude("**/asm-*.jar")
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact distZip
      artifact distTar
    }
  }
}
