plugins {
  id "io.swagger.core.v3.swagger-gradle-plugin"
}

configurations.all {
  resolutionStrategy {
    force 'org.yaml:snakeyaml:2.0', 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
  }
}

dependencies {
  compileOnly project(":tessera-jaxrs:common-jaxrs")
  compileOnly project(":tessera-jaxrs:sync-jaxrs")
  compileOnly project(":tessera-jaxrs:transaction-jaxrs")
  compileOnly project(":tessera-jaxrs:thirdparty-jaxrs")
  compileOnly project(":tessera-jaxrs:openapi:common")
  compileOnly project(":tessera-core")
  compileOnly project(":tessera-partyinfo")
  compileOnly project(":enclave:enclave-api")
  compileOnly project(":shared")
  compileOnly project(":tessera-jaxrs:partyinfo-model")
  compileOnly project(":encryption:encryption-api")
  compileOnly project(":config")
  compileOnly project(":tessera-recover")

  compileOnly "io.swagger.core.v3:swagger-core-jakarta"
  compileOnly "org.glassfish:jakarta.json"
}

resolve {
  classpath = sourceSets.main.compileClasspath
  outputDir = file("${project.buildDir}/generated-resources/openapi")
  outputFormat = 'JSONANDYAML'
  prettyPrint = true
  openApiFile = file("${project.projectDir}/src/main/resources/openapi-base.yaml")
  modelConverterClasses = [
    'com.quorum.tessera.openapi.FullyQualifiedNameResolver'
  ]
}

// exists to have a self-documenting task name when called from CI/CD
task generateOpenApiDoc {
  dependsOn resolve
}
