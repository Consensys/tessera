plugins {
  id "java-library"
}

dependencies {
  api 'io.swagger.core.v3:swagger-annotations'
  api "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
  implementation project(":config")
  implementation project(":tessera-core")
  implementation project(":tessera-partyinfo")
  implementation project(":encryption:encryption-api")
  implementation project(":shared")
  implementation project(":tessera-jaxrs:common-jaxrs")
  implementation project(':tessera-jaxrs:partyinfo-model')
  implementation project(":tessera-context")
  implementation project(":tessera-data")
  implementation "io.swagger.core.v3:swagger-annotations-jakarta"
  implementation "jakarta.ws.rs:jakarta.ws.rs-api"
  implementation "org.glassfish:jakarta.json"
  implementation "jakarta.xml.bind:jakarta.xml.bind-api"

  testImplementation "org.glassfish.jersey.test-framework:jersey-test-framework-core"
  testRuntimeOnly "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2"
  testRuntimeOnly "org.glassfish.jersey.media:jersey-media-json-processing"
  testRuntimeOnly "org.glassfish.jersey.media:jersey-media-moxy"
  testRuntimeOnly "org.glassfish.jersey.inject:jersey-hk2"

  testImplementation project(":tessera-data")
  testImplementation project(":enclave:enclave-api")

  compileOnly project(':tessera-jaxrs:openapi:common')
}

description = "thirdparty-jaxrs"

def generatedResources = "${project.buildDir}/generated-resources/openapi"

sourceSets.main.output.dir(generatedResources)

jar {
  manifest {
    attributes(
      "Implementation-Title": project.name,
      "Implementation-Version": project.version,
      "Specification-Version": String.valueOf(project.version).replaceAll("-SNAPSHOT","")
      )
  }
}
