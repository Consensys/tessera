name: Tessera Release Build

on:
  repository_dispatch:
    types: [release]

env:
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  GPG_EXECUTABLE: ${{ secrets.GPG_EXECUTABLE }}
  GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}

jobs:
  checkdependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: ./gradlew dependencyCheckAnalyze -x test
  release_sonatype:
    needs: checkdependencies
    runs-on: ubuntu-latest
    outputs:
      full-ver: ${{ steps.release.outputs.full-ver }}
      minor-ver: ${{ steps.release.outputs.minor-ver }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Release
        id: release
        run: |
          git config user.name "quorumbot"
          now=`date +%Y%m%d%H%M%S`
          tagversion=`cat version.txt | cut -d'-' -f1`
          tagname="tessera-$tagversion"
          echo "Releasing $tagname"
          echo "$tagversion" > version.txt
          git add version.txt
          git commit -m "Change to release version $tagversion"
          git tag -a $tagname -m "Release tessera $tagversion"
          git push --tags

          echo "${GPG_SECRET_KEYS}" | base64 --decode | gpg --import --no-tty --batch --yes
          echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust
          pubkey=`gpg --list-keys -a info@goquorum.com|head -2|tail -1|xargs`
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -PsonatypeUsername=$SONATYPE_USERNAME -PsonatypePassword=$SONATYPE_PASSWORD -Psigning.gnupg.keyName=$pubkey --info
          ./gradlew incrementProjectVersion --info
          git add version.txt
          git commit -m "Change version to next development version"

          minor_version=${tagversion%.*}
          echo ::set-output name=full-ver::$tagversion
          echo ::set-output name=minor-ver::$minor_version
          echo ::set-output name=branch-name::release-$now
      - name: Create PR to update development version
        uses: peter-evans/create-pull-request@v3
        with:
          branch: ${{ steps.release.outputs.branch-name }}
          title: Update development version
          body: Triggered by release https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Upload tessera dists
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: tessera-dists
          path: tessera-dist/build/distributions/
      - name: Upload azure-key-vault dists
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: azure-key-vault-dists
          path: key-vault/azure-key-vault/build/distributions/
      - name: Upload aws-key-vault dists
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: aws-key-vault-dists
          path: key-vault/aws-key-vault/build/distributions/
      - name: Upload hashicorp-key-vault dists
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: hashicorp-key-vault-dists
          path: key-vault/hashicorp-key-vault/build/distributions/

  release_docker:
    needs: release_sonatype
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from SCM
        uses: actions/checkout@v2
      - name: Download tessera dists
        uses: actions/download-artifact@v2
        with:
          name: tessera-dists
          path: tessera-dist/build/distributions/
      - name: Download azure-key-vault dists
        uses: actions/download-artifact@v2
        if: success()
        with:
          name: azure-key-vault-dists
          path: key-vault/azure-key-vault/build/distributions/
      - name: Download aws-key-vault dists
        uses: actions/download-artifact@v2
        if: success()
        with:
          name: aws-key-vault-dists
          path: key-vault/aws-key-vault/build/distributions/
      - name: Download hashicorp-key-vault dists
        uses: actions/download-artifact@v2
        if: success()
        with:
          name: hashicorp-key-vault-dists
          path: key-vault/hashicorp-key-vault/build/distributions/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Get current date-time (RFC 3339 standard)
        id: date
        run: |
          echo "::set-output name=now::$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      - name: Build and push standalone tessera images
        uses: docker/build-push-action@v2
        with:
          tags: |
            ${{ secrets.DOCKER_REPO }}:latest
            ${{ secrets.DOCKER_REPO }}:${{ needs.release_sonatype.outputs.minor-ver }}
            ${{ secrets.DOCKER_REPO }}:${{ needs.release_sonatype.outputs.full-ver }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.now }}
          push: true
          file: docker/tessera.Dockerfile
          # context must be explicitly provided to prevent docker/build-push-action checking out the repo again and deleting the downloaded artifacts
          context: .
      - name: Build and push tessera+azure images
        uses: docker/build-push-action@v2
        with:
          tags: |
            ${{ secrets.DOCKER_REPO }}:azure-latest
            ${{ secrets.DOCKER_REPO }}:azure-${{ needs.release_sonatype.outputs.minor-ver }}
            ${{ secrets.DOCKER_REPO }}:azure-${{ needs.release_sonatype.outputs.full-ver }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.now }}
          push: true
          file: docker/tessera.azure.Dockerfile
          # context must be explicitly provided to prevent docker/build-push-action checking out the repo again and deleting the downloaded artifacts
          context: .
      - name: Build and push tessera+aws images
        uses: docker/build-push-action@v2
        with:
          tags: |
            ${{ secrets.DOCKER_REPO }}:aws-latest
            ${{ secrets.DOCKER_REPO }}:aws-${{ needs.release_sonatype.outputs.minor-ver }}
            ${{ secrets.DOCKER_REPO }}:aws-${{ needs.release_sonatype.outputs.full-ver }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.now }}
          push: true
          file: docker/tessera.aws.Dockerfile
          # context must be explicitly provided to prevent docker/build-push-action checking out the repo again and deleting the downloaded artifacts
          context: .
      - name: Build and push tessera+hashicorp images
        uses: docker/build-push-action@v2
        with:
          tags: |
            ${{ secrets.DOCKER_REPO }}:hashicorp-latest
            ${{ secrets.DOCKER_REPO }}:hashicorp-${{ needs.release_sonatype.outputs.minor-ver }}
            ${{ secrets.DOCKER_REPO }}:hashicorp-${{ needs.release_sonatype.outputs.full-ver }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.date.outputs.now }}
          push: true
          file: docker/tessera.hashicorp.Dockerfile
          # context must be explicitly provided to prevent docker/build-push-action checking out the repo again and deleting the downloaded artifacts
          context: .