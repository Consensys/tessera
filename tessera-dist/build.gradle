plugins {
  id "application"
  id "org.owasp.dependencycheck"
}

application {
  applicationName = "tessera"
  mainClass = "com.quorum.tessera.launcher.Main"
  mainModule = "tessera.application"
  applicationDefaultJvmArgs = [
    "-Dtessera.cli.type=CONFIG",
    "-Djnr.ffi.asm.enabled=false",
    "-Djavax.xml.bind.JAXBContextFactory=org.eclipse.persistence.jaxb.JAXBContextFactory",
    "-Djavax.xml.bind.context.factory=org.eclipse.persistence.jaxb.JAXBContextFactory"

    //           "--add-opens", "java.base/jdk.internal.misc=io.netty.common,ALL-UNNAMED",
    //           "--add-exports", "java.base/jdk.internal.misc=io.netty.common,ALL-UNNAMED",
    //            "--add-opens", "java.base/java.nio=io.netty.common,ALL-UNNAMED",
    //            "-Dio.netty.tryReflectionSetAccessible=true",
    //            "-Dreactor.netty.ioWorkerCount=128"
  ]
  startScripts.enabled = true

}

configurations.all {
  exclude module: "jakarta.persistence"
  exclude module: "jakarta.activation"
  exclude module: "jakarta.inject"
  exclude group: "org.ow2.asm"
}

dependencies {
  implementation "com.h2database:h2"
  implementation "org.apache.commons:commons-lang3"
  implementation project(":config")
  implementation project(":shared")
  implementation project(":argon2")

  implementation project(":security")
  implementation project(":server:server-api")
  implementation project(":enclave:enclave-api")
  implementation project(":tessera-core")
  implementation project(":cli:cli-api")
  implementation project(":cli:config-cli")
  implementation project(":tessera-partyinfo")
  implementation project(":tessera-jaxrs:sync-jaxrs")
  implementation project(":tessera-jaxrs:transaction-jaxrs")
  implementation project(":tessera-jaxrs:thirdparty-jaxrs")
  implementation project(":enclave:enclave-jaxrs")
  implementation project(":tessera-recover")
  implementation project(":server:jersey-server")
  implementation project(":server:jaxrs-client-unixsocket")
  implementation("org.glassfish.jersey.media:jersey-media-json-processing") {
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  implementation("org.eclipse.persistence:org.eclipse.persistence.moxy") {
    exclude group: "jakarta.json", module: "jakarta.json-api"
  }

  implementation "org.glassfish:jakarta.json"
  //exclude group: "jakarta.json", module: "jakarta,json-api"

  implementation project(":encryption:encryption-api")
  implementation project(":encryption:encryption-jnacl")
  implementation project(":encryption:encryption-ec")

  implementation "jakarta.validation:jakarta.validation-api"

  implementation project(":tessera-context")

  implementation "org.bouncycastle:bcpkix-jdk15on"
  implementation "jakarta.inject:jakarta.inject-api"

  implementation "org.glassfish.jersey.core:jersey-common"
  implementation "org.glassfish.jersey.core:jersey-client"

}


distZip {
  // exclude("**/jakarta.persistence-2.2.3.jar")
  //    exclude("**/jakarta.activation-1.2.2.jar")
  //    exclude("**/jakarta.inject-2.6.1.jar")
  //  exclude("**/asm-*.jar")
}
distTar {
  //exclude("**/jakarta.persistence-2.2.3.jar")
  //  exclude("**/jakarta.activation-1.2.2.jar")
  //  exclude("**/jakarta.inject-2.6.1.jar")
  //  exclude("**/asm-*.jar")
}

dependencyCheck {
  failBuildOnCVSS = 0
}

publishing {

  publications {

    mavenJava(MavenPublication) {
      artifact distZip
      artifact distTar
    }
  }
}
