plugins {
  id "application"
  id "org.owasp.dependencycheck"
  id "org.javamodularity.moduleplugin"
}

application {
  applicationName = "tessera"
  mainClass = "com.quorum.tessera.launcher.Main"
  mainModule = "tessera.application"
  applicationDefaultJvmArgs = [
    "-Dtessera.cli.type=CONFIG",
    "-Djnr.ffi.asm.enabled=false",
    "-Djakarta.xml.bind.JAXBContextFactory=org.eclipse.persistence.jaxb.JAXBContextFactory",
    "-Djakarta.xml.bind.context.factory=org.eclipse.persistence.jaxb.JAXBContextFactory",
    "--add-opens=org.glassfish.json.jaxrs/org.glassfish.json.jaxrs=org.glassfish.hk2.utilities",
  ]
  startScripts.enabled = true
}

configurations.all {
  exclude module: "jakarta.persistence"
  exclude group: "jakarta.mail"
  exclude module: "jakarta.inject"
  exclude group: "jakarta.json"
  exclude group: "org.ow2.asm"

  exclude group: "io.swagger.core.v3", module: "swagger-core-jakarta"
  exclude group: "io.swagger.core.v3", module: "swagger-parser"
  exclude group: "io.swagger.core.v3", module: "swagger-jaxrs2-jakarta"
  exclude group: "com.fasterxml.jackson.datatype"
}

dependencies {
  implementation "com.h2database:h2"
  implementation "org.apache.commons:commons-lang3"
  implementation project(":config")
  implementation project(":shared")
  implementation project(":argon2")

  implementation project(":security")
  implementation project(":server:server-api")
  implementation project(":enclave:enclave-api")
  implementation project(":tessera-core")
  implementation project(":cli:cli-api")
  implementation project(":cli:config-cli")
  implementation project(":tessera-partyinfo")
  implementation project(":tessera-jaxrs:sync-jaxrs")
  implementation project(":tessera-jaxrs:transaction-jaxrs")
  implementation project(":tessera-jaxrs:thirdparty-jaxrs")
  implementation project(":enclave:enclave-jaxrs")
  implementation project(":tessera-recover")
  implementation project(":server:jersey-server")
  implementation project(":server:jaxrs-client-unixsocket")
  implementation("org.glassfish.jersey.media:jersey-media-json-processing") {
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  implementation("org.eclipse.persistence:org.eclipse.persistence.moxy") {
    exclude group: "jakarta.json", module: "jakarta.json-api"
  }

  implementation "org.glassfish:jakarta.json"
  //exclude group: "jakarta.json", module: "jakarta,json-api"

  implementation project(":encryption:encryption-api")
  implementation project(":encryption:encryption-jnacl")
  implementation project(":encryption:encryption-ec")

  api "jakarta.validation:jakarta.validation-api"
  implementation "org.hibernate.validator:hibernate-validator"
  implementation "com.fasterxml:classmate"

  implementation 'com.sun.mail:jakarta.mail'

  implementation "org.eclipse.persistence:org.eclipse.persistence.asm"

  implementation project(":tessera-context")

  implementation "org.bouncycastle:bcpkix-jdk15on"
  implementation "jakarta.inject:jakarta.inject-api"

  implementation "org.glassfish.jersey.core:jersey-common"
  implementation "org.glassfish.jersey.core:jersey-client"

}

dependencyCheck {
  failBuildOnCVSS = 0
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact distZip
      artifact distTar
    }
  }
}
